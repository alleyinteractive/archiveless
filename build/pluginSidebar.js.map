{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack:///./plugins/sidebar/components/archivelessToggle/index.js","webpack:///./plugins/sidebar/index.js"],"names":["enumerable","get","getter","value","key","bind","module","Object","prototype","hasOwnProperty","call","object","property","exports","ReactPropTypesSecret","emptyFunction","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bool","func","number","string","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","wp","components","createSlotFill","ToggleControl","compose","data","withDispatch","withSelect","__","i18n","PluginPostStatusInfo","Fill","ArchivelessToggle","React","PureComponent","this","meta","archiveless","onUpdate","label","checked","onChange","propTypes","post","select","editor","getEditedPostAttribute","getCurrentPost","dispatch","metaKey","metaValue","editPost","registerPlugin","plugins","render"],"mappings":"aACA,SAGA,cAGA,QACA,oBAGA,YACA,IACA,KACA,YAUA,OANA,mCAGA,OAGA,UAKA,MAGA,MAGA,oBACA,UACA,2BAA2CA,YAAY,EAAMC,IAAKC,KAKlE,gBACA,gDACA,4CAAyDC,MAAO,WAEhE,sCAAkDA,OAAO,KAQzD,kBAEA,GADA,cACA,aACA,qDACA,0BAGA,GAFA,OACA,mCAA0CH,YAAY,EAAMG,MAAOA,IACnE,2DAAiH,OAAOA,EAAMC,IAAQC,KAAK,KAAMD,IACjJ,UAIA,gBACA,sBACA,WAA4B,OAAOE,EAAgB,SACnD,WAAkC,OAAOA,GAEzC,OADA,aACA,GAIA,kBAAuD,OAAOC,OAAOC,UAAUC,eAAeC,KAAKC,EAAQC,IAG3G,OAIA,S,kBCxDEN,EAAOO,QAAU,EAAQ,EAAR,I,6BCjBnB,IAAIC,EAAuB,EAAQ,GAEnC,SAASC,KAETT,EAAOO,QAAU,WACf,SAASG,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWR,EAAf,CAIA,IAAIS,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIE,KAAO,sBACLF,GAGR,SAASG,IACP,OAAOV,EAFTA,EAAKW,WAAaX,EAMlB,IAAIY,EAAiB,CACnBC,MAAOb,EACPc,KAAMd,EACNe,KAAMf,EACNgB,OAAQhB,EACRL,OAAQK,EACRiB,OAAQjB,EACRkB,OAAQlB,EAERmB,IAAKnB,EACLoB,QAASV,EACTW,QAASrB,EACTsB,WAAYZ,EACZa,KAAMvB,EACNwB,SAAUd,EACVe,MAAOf,EACPgB,UAAWhB,EACXiB,MAAOjB,EACPkB,MAAOlB,GAMT,OAHAE,EAAeiB,eAAiB9B,EAChCa,EAAekB,UAAYlB,EAEpBA,I,6BC9CTtB,EAAOO,QAFoB,gD,q2BCUvBkC,G,IAdFC,WACEC,E,EAAAA,eACAC,E,EAAAA,cAGAC,E,EADFA,QACEA,Q,IAEFC,KACEC,E,EAAAA,aACAC,E,EAAAA,WAGAC,E,EADFC,KACED,GAIUE,EAAyBR,EAAe,wBAA9CS,KAEFC,E,8ZAA0BC,MAAMC,e,uCAa3B,MAMHC,KAAK7C,MANF,IAEL8C,KACEC,mBAHG,SAKLC,EALK,EAKLA,SAGF,OACE,oBAACR,EAAD,KACE,+BACA,oBAACP,EAAD,CACEgB,MAAOX,EAAG,qBAAsB,eAChCY,QAASH,EACTI,SAAU,SAACjE,GAAD,OAAW8D,EACnB,cACA9D,Y,gCA7BNwD,EACGU,UAAY,CACjBN,KAAMjB,IAAUH,MAAM,CACpBqB,YAAalB,IAAUhB,OACtBH,WACHsC,SAAUnB,IAAUf,KAAKJ,WACzB2C,KAAMxB,IAAUH,MAAM,IAAIhB,YA+BfwB,QAAQ,CACrBG,GAAW,SAACiB,GACV,IAAMC,EAASD,EAAO,eADD,EAIjBC,EAAOC,uBAAuB,QADhCT,YAGF,MAAO,CACLD,KAAM,CACJC,iBARiB,UAUnBM,KAAME,EAAOE,qBAGjBrB,GAAa,SAACsB,GAAD,MAAe,CAC1BV,SAAU,SAACW,EAASC,G,UAClBF,EAAS,eAAeG,SAAS,CAC/Bf,M,EAAI,G,EACDa,E,EAAUC,E,wGAlBN1B,CAuBZQ,ICzEHoB,EAFIhC,GAHFiC,QACED,gBAIW,qBAAsB,CACnCE,OAAQtB","file":"pluginSidebar.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/* global React, wp */\n\nimport PropTypes from 'prop-types';\n\nconst {\n  components: {\n    createSlotFill,\n    ToggleControl,\n  },\n  compose: {\n    compose,\n  },\n  data: {\n    withDispatch,\n    withSelect,\n  },\n  i18n: {\n    __,\n  },\n} = wp;\n\nconst { Fill: PluginPostStatusInfo } = createSlotFill('PluginPostStatusInfo');\n\nclass ArchivelessToggle extends React.PureComponent {\n  static propTypes = {\n    meta: PropTypes.shape({\n      archiveless: PropTypes.bool,\n    }).isRequired,\n    onUpdate: PropTypes.func.isRequired,\n    post: PropTypes.shape({}).isRequired,\n  };\n\n  /**\n   * Renders the PluginSidebar.\n   * @returns {object} JSX component markup.\n   */\n  render() {\n    const {\n      meta: {\n        archiveless = false,\n      },\n      onUpdate,\n    } = this.props;\n\n    return (\n      <PluginPostStatusInfo>\n        <hr />\n        <ToggleControl\n          label={__('Hide from Archives', 'archiveless')}\n          checked={archiveless}\n          onChange={(value) => onUpdate(\n            'archiveless',\n            value\n          )}\n        />\n      </PluginPostStatusInfo>\n    );\n  }\n}\n\nexport default compose([\n  withSelect((select) => {\n    const editor = select('core/editor');\n    const {\n      archiveless = false,\n    } = editor.getEditedPostAttribute('meta');\n\n    return {\n      meta: {\n        archiveless,\n      },\n      post: editor.getCurrentPost(),\n    };\n  }),\n  withDispatch((dispatch) => ({\n    onUpdate: (metaKey, metaValue) => {\n      dispatch('core/editor').editPost({\n        meta: {\n          [metaKey]: metaValue,\n        },\n      });\n    },\n  })),\n])(ArchivelessToggle);\n","/* global wp */\n\nimport ArchivelessToggle from './components/archivelessToggle';\n\nconst {\n  plugins: {\n    registerPlugin,\n  },\n} = wp;\n\nregisterPlugin('archiveless-toggle', {\n  render: ArchivelessToggle,\n});\n"],"sourceRoot":""}